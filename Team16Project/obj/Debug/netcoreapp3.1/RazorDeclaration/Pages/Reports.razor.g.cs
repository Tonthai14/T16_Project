// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Team16Project.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\Tonth\source\repos\T16_Project\Team16Project\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Tonth\source\repos\T16_Project\Team16Project\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Tonth\source\repos\T16_Project\Team16Project\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Tonth\source\repos\T16_Project\Team16Project\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Tonth\source\repos\T16_Project\Team16Project\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Tonth\source\repos\T16_Project\Team16Project\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Tonth\source\repos\T16_Project\Team16Project\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Tonth\source\repos\T16_Project\Team16Project\_Imports.razor"
using Team16Project;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Tonth\source\repos\T16_Project\Team16Project\_Imports.razor"
using Team16Project.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Tonth\source\repos\T16_Project\Team16Project\Pages\Reports.razor"
using DataLibrary;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Tonth\source\repos\T16_Project\Team16Project\Pages\Reports.razor"
using DataLibrary.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Tonth\source\repos\T16_Project\Team16Project\Pages\Reports.razor"
using Team16Project.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Tonth\source\repos\T16_Project\Team16Project\Pages\Reports.razor"
using Microsoft.Extensions.Configuration;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/reports")]
    public partial class Reports : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 125 "C:\Users\Tonth\source\repos\T16_Project\Team16Project\Pages\Reports.razor"
       
    List<RideDateModel> rideDates;
    List<CustomerReportModel> customerDates;
    private DisplayReportModel rideReport = new DisplayReportModel();
    private DisplayReportModel customerReport = new DisplayReportModel();
    bool rideReportGenerated = false;
    bool customerReportGenerated = false;
    List<RideReportModel> generatedRideReport;
    List<CustomerReportModel> generatedCustomerReport;

    private async Task FetchCustomerReport()
    {
        customerReportGenerated = false;
        var startDate = customerReport.StartDate.Date;
        var endDate = customerReport.EndDate.Date;

        string query = "SELECT MONTH(EnteredPark) AS Month, YEAR(EnteredPark) AS Year, COUNT(*) AS NumCustomers " +
                "FROM CUSTOMER WHERE DATE(EnteredPark) >= @startDate AND DATE(EnteredPark) <= @endDate " +
                "GROUP BY MONTH(EnteredPark) ORDER BY Month DESC, YEAR DESC;";
        generatedCustomerReport = await _data.LoadData<CustomerReportModel, dynamic>(query,
            new { startDate = startDate, endDate = endDate },
            _config.GetConnectionString("default"));
        customerReportGenerated = true;
        await OnInitializedAsync();
    }

    private async Task FetchRideReport()
    {
        rideReportGenerated = false;
        var startDate = rideReport.StartDate.Date;
        var endDate = rideReport.EndDate.Date;
        string query = "SELECT RIDE_RideId AS RideId, AVG(TimesRidden) AS TimesRidden " +
                 "FROM RIDE_DATE WHERE Date >= @startDate AND Date <= @endDate " +
                 "GROUP BY MONTH(Date), RideId ORDER BY TimesRidden DESC;";
        if (rideReport.ReportType == "Most frequently ridden")
        {
            query = "SELECT RIDE_RideId AS RideId, AVG(TimesRidden) AS TimesRidden " +
                "FROM RIDE_DATE WHERE Date >= @startDate AND Date <= @endDate " +
                "GROUP BY MONTH(Date), RideId ORDER BY TimesRidden DESC;";
        }
        else if(rideReport.ReportType == "Most breakdowns")
        {
            

#line default
#line hidden
#nullable disable
#nullable restore
#line 169 "C:\Users\Tonth\source\repos\T16_Project\Team16Project\Pages\Reports.razor"
                                                                       
        }
        generatedRideReport = await _data.LoadData<RideReportModel, dynamic>(query,
            new { startDate = startDate, endDate = endDate },
            _config.GetConnectionString("default"));
        rideReportGenerated = true;
        await OnInitializedAsync();
    }

    protected override async Task OnInitializedAsync()
    {
        string rideQuery = "SELECT DISTINCT Date FROM RIDE_DATE ORDER BY Date ASC;";
        rideDates = await _data.LoadData<RideDateModel, dynamic>(rideQuery, new { }, _config.GetConnectionString("default"));
        string customerQuery = "SELECT DISTINCT DATE(EnteredPark) AS Date FROM CUSTOMER ORDER BY Date ASC;";
        customerDates = await _data.LoadData<CustomerReportModel, dynamic>(customerQuery, new { }, _config.GetConnectionString("default"));
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager nav { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IConfiguration _config { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IDataAccess _data { get; set; }
    }
}
#pragma warning restore 1591
